TODOs in code

open source:
    write README:
        in usage instructions:
            1. create channel for bot
            2. invite bot
            this to avoid people setting the bot in a general chat channel
        link that alternative project i found that's probably a lot better than this one
    document all documentable things with docstrings or whatever they're called

have a delay of 1 second before acting upon any mute-all requests. maybe there's one async primitive that works exactly for this? condition? not sure

make ControlPanel class? (everything is an object??)

make the bot work on dedicated servers with multiple channels:
    multiple self.text_channels and bound voice_channels
    among:assign (only command necessary): tracks the authors voice channel and sends a control panel to the channel where it was sent

maybe DO remember members and their states?
    so we can still unmute members who left muted

control panel:
    format:
        show gone but left users with a different format
    mention username killing/ignoring
    allow multiple numbers (space-separated) in same message

untrack/unmute tracked people everytime a new vc is set # does this already happen?
    new method reset()?

once tracked, only mute inside of channel and unmute elsewhere # tis gon be real slow

setting up:
    append command output/responses to the top of control_panel (chronological still lol) instead of responding. also, delete command messages
    maybe resend the control panel after every message or something idk make the control panel stay at the bottom ughgh

support mutliple guilds:
    among:help

commands for all reactions (maybe not):
    among:mute/among:unmute and the like
    maybe a new Action class that sets up reaction listening, default reaction sending (the reaction sent by the bot to the control panel) and respective commands

voice presence:
    new reaction: joins the voice channel
    when on the vc, plays sounds before muting and after unmuting everyone

reaction: admin-takeover
    AKA among:takeover
    only act when admin reacts/sends commands
    needs a prepared admin role set up with among:admin_role (actually maybe the API provides a way to see if the user is admin)

add a way to get to the source code (through a command? through among:help?)

low priority:
    on startup clear all invalid reactions on old control panel

